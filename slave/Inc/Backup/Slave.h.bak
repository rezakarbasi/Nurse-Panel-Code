//includes
#include "stm32f1xx_hal.h"


//defines
#define Packet_Lenght 10
#define START_BYTE0 0xA5
#define START_BYTE1 0x5A
#define START_BYTE2 0x00
#define START_BYTE3 0xFF
#define STOP_BYTE 0x80
#define Buffer_Size Max_Packet_Lenght

//Types
typedef union PCK_c
{
  struct Data_c
  {
    uint8_t st0;
    uint8_t st1;
	
    uint8_t address; //ADDRESS
	//	uint8_t data_type; //CTRL OR DATA FOR VOICE
    uint8_t function; //ERROR or FUNCTION TABLE
	uint8_t data1;
	uint8_t data2;
	uint8_t data3;
	uint8_t data4;
	uint8_t cksum;
	uint8_t stp;
		//uint8_t OTHER[Max_Packet_Lenght-10];
	
  }CTRL;
//	struct Data_v
//  {
//    uint8_t st0;
//    uint8_t st1;
//	
//    uint8_t address; //ADDRESS
//		uint8_t data_type; //CTRL OR DATA FOR VOICE
//		uint8_t tmp1; //ERROR or FUNCTION TABLE
//		uint8_t tmp2;
//		uint16_t cksumcrc;
//		uint16_t tmp3;
//		uint8_t dataV[Max_Packet_Lenght-12];
//		uint16_t stp;
//	
//  }VOICE;
//  
  uint8_t pck[Packet_Lenght];//max 1000BYTEs
}PCK;
//typedef union UNION_10									
//{
//  
//	struct Data_10
//  {
//    uint8_t ST0;
//    uint8_t ST1;
//    uint8_t address;
//    uint8_t function;
//		uint8_t data1;
//		uint8_t data2;
//		uint8_t data3;
//		uint8_t data4;
//		uint8_t cksum;
//		uint8_t stp;
//  }Dist_PCK_10;															// Distributed packet
//	
//  uint8_t Ass_pck_10[Packet_Lenght];				// Associated  packet
//}PCK_10_by_10;

//typedef union UNION_req
//{
//  struct Data_req
//  {
//    uint8_t ST0;
//    uint8_t ST1;
//    uint8_t ST2;
//    uint8_t ST3;
//		uint8_t address1;
//		uint8_t address2;
//		uint8_t temp1;
//		uint8_t temp2;
//		uint8_t cksum;
//		uint8_t stp;
//  }Dist_PCK_req;														// Distributed packet

//  uint8_t Ass_pck[Packet_Lenght];				// Associated  packet
//}PCK_speak_req;

// Variables
//extern PCK_10_by_10 Send_pck;
//extern PCK_10_by_10 Receive_pck;
//extern PCK_speak_req Req_pck;

// Functions
//void init_10_by_10_pck(PCK_10_by_10 * pck,uint8_t address,uint8_t function,uint8_t data1,uint8_t data2,uint8_t data3,uint8_t data4);
//void init_speak_req(uint8_t address);
